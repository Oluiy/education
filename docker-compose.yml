services:
  # Database
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: edunerve
      POSTGRES_PASSWORD: edunerve2024
      POSTGRES_DB: edunerve
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U edunerve -d edunerve"]
      interval: 10s
      timeout: 5s
      retries: 5
    dns:
      - 8.8.8.8
    networks:
      - edunerve-network

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - edunerve-network

  # Frontend Application
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    depends_on:
      - api-gateway
    networks:
      - edunerve-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    env_file:
      - docker-compose.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_started
      content-quiz-service:
        condition: service_started
      assistant-service:
        condition: service_started
      admin-service:
        condition: service_started
      sync-messaging-service:
        condition: service_started
      file-storage-service:
        condition: service_started
      notification-service:
        condition: service_started
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - edunerve-network

  # Auth Service
  auth-service:
    build: ./services/auth-service
    ports:
      - "8001:8001"
    env_file:
      - docker-compose.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edunerve-network
    restart: unless-stopped

  # Content Quiz Service
  content-quiz-service:
    build: ./services/content-quiz-service
    ports:
      - "8002:8002"
    env_file:
      - docker-compose.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edunerve-network
    restart: unless-stopped

  # Assistant Service
  assistant-service:
    build: ./services/assistant-service
    ports:
      - "8003:8003"
    env_file:
      - docker-compose.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edunerve-network
    restart: unless-stopped

  # Admin Service
  admin-service:
    build: ./services/admin-service
    ports:
      - "8004:8004"
    env_file:
      - docker-compose.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edunerve-network
    restart: unless-stopped

  # Sync Messaging Service
  sync-messaging-service:
    build: ./services/sync-messaging-service
    ports:
      - "8005:8005"
    env_file:
      - docker-compose.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edunerve-network
    restart: unless-stopped

  # File Storage Service
  file-storage-service:
    build: ./services/file-storage-service
    ports:
      - "8006:8006"
    env_file:
      - docker-compose.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - file_uploads:/app/uploads
    networks:
      - edunerve-network
    restart: unless-stopped

  # Notification Service
  notification-service:
    build: ./services/notification-service
    ports:
      - "8007:8007"
    env_file:
      - docker-compose.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - edunerve-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  file_uploads:

networks:
  edunerve-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: edunerve-bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
